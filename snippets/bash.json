{
  "Simple Bash Function": {
    "prefix": ["func", "function"],
    "body": [
      "function function_name() {",
      "  # function body",
      "}"
    ],
    "description": "Simple bash function"
  },
  "Bash Script Template": {
    "prefix": ["bash-template", "bash", "template"],
    "body": [
      "#! /usr/bin/env bash",
      "",
      "# -------------------------------------------------------------------------------- #",
      "# Description                                                                      #",
      "# -------------------------------------------------------------------------------- #",
      "# Describe your script here                                                        #",
      "#                                                                                  #",
      "# Key features:                                                                    #",
      "#     Strict mode (Optional)                                                       #",
      "#     Root user detection (Optional)                                               #",
      "#     Prerequisite checker                                                         #",
      "#     cli processing                                                               #",
      "#     Wrapper functions                                                            #",
      "#     Colour handling (optional)                                                   #",
      "#     Rollback handling (Deterministic)                                            #",
      "# -------------------------------------------------------------------------------- #",
      "",
      "rollback_stack=()",
      "",
      "PREREQ_COMMANDS=()",
      "",
      "STRICT_MODE=true      # Should we run in strict mode?",
      "VERBOSE=false         # Should we give verbose output?",
      "ALLOW_ZERO_INPUT=true # Do we require any user input?",
      "USE_COLOURS=true      # Should we use colours in our output?",
      "FORCE_TERMINAL=true   # Force terminal type if required",
      "TERMINAL_TYPE=xterm   # What terminal should we force?",
      "ROOT_ONLY=false       # Should the script be run only by the root user?",
      "READONLY_INFO=true    # Set the script info to READONLY",
      "",
      "# Variables go here if required",
      "",
      "function wrapper() {",
      "  echo \"${fgGreen}I got here!!${reset}\"",
      "}",
      "",
      "function usage() {",
      "  [[ -n \"${*}\" ]] && error \"  Error: ${*}\"",
      "  cat <<EOF",
      "  Usage: $0 [ -hdv ] [ -f ] [ -p value ]",
      "    -h | --help      : Print this screen",
      "    -d | --debug     : Turn on debug mode (set -o xtrace)",
      "    -v | --verbose   : Verbose output",
      "    -f | --flag      : flag with no parameter",
      "    -p | --parameter : With parameter",
      "EOF",
      "  clean_exit 1",
      "}",
      "",
      "function test_getopt {",
      "  if getopt --test >/dev/null && true; then",
      "    error 'getopt --test' failed in this environment - Please ensure you are using the gnu getopt.",
      "    if [[ \"$(uname -s || true)\" == \"Darwin\" ]]; then",
      "      error \"You are using MacOS - please ensure you have installed gnu-getopt and updated your path.\"",
      "    fi",
      "    clean_exit 1",
      "  fi",
      "}",
      "",
      "function process_arguments() {",
      "  local options",
      "  local longopts",
      "  local error_msg",
      "",
      "  if [[ \"${ALLOW_ZERO_INPUT}\" = false ]] && [[ $# -eq 0 ]]; then",
      "    usage",
      "  fi",
      "",
      "  test_getopt",
      "",
      "  options=hdvfp:",
      "  longopts=help,debug,verbose,flag,parameter:",
      "",
      "  if ! PARSED=$(getopt --options=\"${options}\" --longoptions=\"${longopts}\" --name \"$0\" -- \"$@\" 2>&1) && true; then",
      "    error_msg=$(echo -e \"${PARSED}\" | head -n 1 | awk -F ':' '{print $2}')",
      "    usage \"${error_msg}\"",
      "  fi",
      "  eval set -- \"${PARSED}\"",
      "  while true; do",
      "    case \"${1}\" in",
      "    -h | --help)",
      "      usage",
      "      ;;",
      "    -d | --debug)",
      "      set -o xtrace # [set -x]",
      "      shift",
      "      ;;",
      "    -v | --verbose)",
      "      VERBOSE=true",
      "      shift",
      "      ;;",
      "    -f | --flag)",
      "      echo \"Flag Set\"",
      "      shift",
      "      ;;",
      "    -p | --parameter)",
      "      echo \"-p $2\"",
      "      shift 2",
      "      ;;",
      "    --)",
      "      shift",
      "      break",
      "      ;;",
      "    *)",
      "      echo \"Default\"",
      "      ;;",
      "    esac",
      "  done",
      "",
      "  wrapper",
      "  clean_exit",
      "}",
      "",
      "# Utility and support functions (init_colours, error, warn, success, info, notify, check_prereqs, check_root, clean_exit, add_rollback, run_rollbacks, set_traps, unset_traps, set_strict_mode, get_script_info) go here.",
      "",
      "function main() {",
      "  init_colours",
      "  [[ \"${STRICT_MODE}\" = true ]] && set_strict_mode",
      "  [[ \"${ROOT_ONLY}\" = true ]] && check_root",
      "  set_traps",
      "  get_script_info \"${@}\"",
      "  check_prereqs",
      "  process_arguments \"${@}\"",
      "}",
      "",
      "main \"${@}\"",
      "",
      "# End of Script"
    ],
    "description": "A comprehensive Bash script template with strict mode, argument parsing, rollback, and utility functions."
  }
}
